/*
 * This file is generated by jOOQ.
 */
package org.example.components.domain.tables.records;


import org.example.components.domain.tables.Bom;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BomRecord extends UpdatableRecordImpl<BomRecord> implements Record9<Long, Long, String, Long, Long, Integer, Boolean, Boolean, String> {

    private static final long serialVersionUID = -1016812076;

    /**
     * Setter for <code>public.bom.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bom.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.bom.unit_id</code>.
     */
    public void setUnitId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bom.unit_id</code>.
     */
    public Long getUnitId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.bom.designator</code>.
     */
    public void setDesignator(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.bom.designator</code>.
     */
    public String getDesignator() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.bom.element_id</code>.
     */
    public void setElementId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.bom.element_id</code>.
     */
    public Long getElementId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.bom.footprint_id</code>.
     */
    public void setFootprintId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.bom.footprint_id</code>.
     */
    public Long getFootprintId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.bom.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.bom.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.bom.fitted</code>.
     */
    public void setFitted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.bom.fitted</code>.
     */
    public Boolean getFitted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.bom.can_be_replaced</code>.
     */
    public void setCanBeReplaced(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.bom.can_be_replaced</code>.
     */
    public Boolean getCanBeReplaced() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.bom.status</code>.
     */
    public void setStatus(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.bom.status</code>.
     */
    public String getStatus() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, String, Long, Long, Integer, Boolean, Boolean, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, String, Long, Long, Integer, Boolean, Boolean, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Bom.BOM.ID;
    }

    @Override
    public Field<Long> field2() {
        return Bom.BOM.UNIT_ID;
    }

    @Override
    public Field<String> field3() {
        return Bom.BOM.DESIGNATOR;
    }

    @Override
    public Field<Long> field4() {
        return Bom.BOM.ELEMENT_ID;
    }

    @Override
    public Field<Long> field5() {
        return Bom.BOM.FOOTPRINT_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Bom.BOM.QUANTITY;
    }

    @Override
    public Field<Boolean> field7() {
        return Bom.BOM.FITTED;
    }

    @Override
    public Field<Boolean> field8() {
        return Bom.BOM.CAN_BE_REPLACED;
    }

    @Override
    public Field<String> field9() {
        return Bom.BOM.STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUnitId();
    }

    @Override
    public String component3() {
        return getDesignator();
    }

    @Override
    public Long component4() {
        return getElementId();
    }

    @Override
    public Long component5() {
        return getFootprintId();
    }

    @Override
    public Integer component6() {
        return getQuantity();
    }

    @Override
    public Boolean component7() {
        return getFitted();
    }

    @Override
    public Boolean component8() {
        return getCanBeReplaced();
    }

    @Override
    public String component9() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUnitId();
    }

    @Override
    public String value3() {
        return getDesignator();
    }

    @Override
    public Long value4() {
        return getElementId();
    }

    @Override
    public Long value5() {
        return getFootprintId();
    }

    @Override
    public Integer value6() {
        return getQuantity();
    }

    @Override
    public Boolean value7() {
        return getFitted();
    }

    @Override
    public Boolean value8() {
        return getCanBeReplaced();
    }

    @Override
    public String value9() {
        return getStatus();
    }

    @Override
    public BomRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BomRecord value2(Long value) {
        setUnitId(value);
        return this;
    }

    @Override
    public BomRecord value3(String value) {
        setDesignator(value);
        return this;
    }

    @Override
    public BomRecord value4(Long value) {
        setElementId(value);
        return this;
    }

    @Override
    public BomRecord value5(Long value) {
        setFootprintId(value);
        return this;
    }

    @Override
    public BomRecord value6(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public BomRecord value7(Boolean value) {
        setFitted(value);
        return this;
    }

    @Override
    public BomRecord value8(Boolean value) {
        setCanBeReplaced(value);
        return this;
    }

    @Override
    public BomRecord value9(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public BomRecord values(Long value1, Long value2, String value3, Long value4, Long value5, Integer value6, Boolean value7, Boolean value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BomRecord
     */
    public BomRecord() {
        super(Bom.BOM);
    }

    /**
     * Create a detached, initialised BomRecord
     */
    public BomRecord(Long id, Long unitId, String designator, Long elementId, Long footprintId, Integer quantity, Boolean fitted, Boolean canBeReplaced, String status) {
        super(Bom.BOM);

        set(0, id);
        set(1, unitId);
        set(2, designator);
        set(3, elementId);
        set(4, footprintId);
        set(5, quantity);
        set(6, fitted);
        set(7, canBeReplaced);
        set(8, status);
    }
}
